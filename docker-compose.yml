version: '3.7'
networks:
  default:
    external:
      name: nhlflasknetwork
services:
  db:
    restart: always
    image: nhlmariadb2
    ports:
      - "3306:3306"
    volumes:
      - type: bind # TODO -- Make this a volume mount for production
        source: /Users/jonathanolson/GitHub/NHL-Project
        target: /NHL-Project
      - type: volume
        source: mynhldb
        target: /var/lib/mysql
      - type: volume
        source: myConfig
        target: /etc/mySecrets # Here, we will have the file /etc/mySecrets/config.py
    environment:
      - MYSQL_USER_FILE=/etc/mySecrets/mysql_user_file
      - MYSQL_PASSWORD_FILE=/etc/mySecrets/mysql_user_password_file
  web:
    restart: always
    image: ubuntuflask2
    ports:
      - "5000:5000"
    volumes:
      - type: bind # TODO -- Make this a volume mount for production
        source: /Users/jonathanolson/GitHub/NHL-Project
        target: /NHL-Project
      - type: volume
        source: myConfig
        target: /etc/mySecrets # Here, we will have the file /etc/mySecrets/config.py
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/etc/mySecrets/mysql_root_password_file
      - MYSQL_USER_FILE=/etc/mySecrets/mysql_user_file
      # - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_PASSWORD_FILE=/etc/mySecrets/mysql_user_password_file
    depends_on:
      - db # Tells docker that "web" can start once "db" is started and running
    command: bash -c "python3 NHL-Project/flaskrun.py"
  server:
    image: nginx
    volumes:
      - type: bind # TODO -- Make this a volume mount for production
        source: /Users/jonathanolson/GitHub/NHL-Project/flasksite/templates
        target: /usr/share/nginx/html
      - type: bind # TODO -- Make this a volume mount for production
        source: /Users/jonathanolson/GitHub/NHL-Project/flasksite/static/favicon.ico
        target: /usr/share/nginx/html/favicon.ico
      - ./conf.d:/etc/nginx/sites-enabled/flasksite
    ports:
     - "8080:80"
    environment:
     - NGINX_PORT=80
    command: /bin/bash -c "exec nginx -g 'daemon off;'"
  gunicornservice:
    image: ubuntugunicorn
    volumes:
      - type: bind # TODO -- Make this a volume mount for production
        source: /Users/jonathanolson/GitHub/NHL-Project
        target: /NHL-Project
      - type: volume
        source: myConfig
        target: /etc/mySecrets # Here, we will have the file /etc/mySecrets/config.py
    working_dir: /NHL-Project
    ports:
      - "8000:8000"
    command:
      /bin/bash -c "gunicorn -w 5 flaskrun:app -b 0.0.0.0:8000"
volumes:
  mynhldb:
    external: true
  myConfig:
    external: true
  myCode:
    external: true
